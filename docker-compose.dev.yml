version: '3'

services:

  broker:
    container_name: essayb-broker-dev
    image: rabbitmq:3
    restart: unless-stopped
    ports:
      - 5672:5672
    logging:
      driver: none

  database:
    image: postgres
    container_name: essayb-database-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ESSAYB_DEV
      POSTGRES_USER: root
      POSTGRES_PASSWORD: toor
    ports:
      - 5432:5432

  backend:
    image: essayb:backend-dev
    container_name: essayb-backend-dev
    build:
      context: backend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      # Use your IPv4 address to BACKEND_DOMAIN and FRONTEND_DOMAIN envs
      # Use port 8080 if gateway is activated, otherwise use 8080 to FRONTEND_DOMAIN and 8888 to BACKEND_DOMAIN
      BACKEND_DOMAIN: 172.17.0.1:8080
      FRONTEND_DOMAIN: 172.17.0.1:8080
      DEPLOY_DEBUG: "true"
      DEPLOY_RELOAD: "true"
      DATABASE_URI: 'postgres://root:toor@database/ESSAYB_DEV'
      BROKER_URI: 'amqp://guest:guest@broker:5672/'
      STRIPE_SECRET_KEY: "sk_test_51IrNBMAZfbuxebHePd59vJFQjsyo2bqZU7wI28R2Ai8NKqMrRLChd3HbMmCxvxqB96RCkOpo48UytOYkdZZ5j5zl00Bwa5HeCF"
      STRIPE_PRICE_ID: "price_1IrNDNAZfbuxebHeTNWS0YWP"
    volumes:
      - ./backend/api:/code/api
      - ./backend/logs:/code/logs
      - ./backend/setup.py:/code/setup.py
    depends_on:
      - database

  frontend:
    image: essayb:frontend-dev
    container_name: essayb-frontend-dev
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    environment:
      # Use your IPv4 address to BACKEND_DOMAIN and FRONTEND_DOMAIN envs
      # Use port 8080 if gateway is activated, otherwise use 8080 to FRONTEND_DOMAIN and 8888 to BACKEND_DOMAIN
      BACKEND_DOMAIN: 172.17.0.1:8080
      FRONTEND_DOMAIN: 172.17.0.1:8080
      STRIPE_PUBLIC_KEY: "pk_test_51IrNBMAZfbuxebHedj4AUGBC0kyo2xcc2l5DpvCAYaSSXRZZWQGs7btmaLyAJ6WQMmjXxW0k1FP7oZyqMaQuf0Gw00vm9T4sfj"
    volumes:
      - ./frontend/next.config.js:/code/next.config.js
      - ./frontend/src:/code/src/
      - ./frontend/public:/code/public/
      - ./frontend/config:/code/config/
      - ./frontend/package.json:/code/package.json
      - ./frontend/package-lock.json:/code/package-lock.json
    depends_on:
      - database

  worker:
    image: essayb:backend-dev
    container_name: essayb-worker-dev
    restart: unless-stopped
    command: ["celery", "-A", "api.queue_manager.task", "worker", "-l", "info", "-B", "-Q", "essayb-dev"]
    environment:
      # Use your IPv4 address to BACKEND_DOMAIN and FRONTEND_DOMAIN envs
      # Use port 8080 if gateway is activated, otherwise use 8080 to FRONTEND_DOMAIN and 8888 to BACKEND_DOMAIN
      BACKEND_DOMAIN: 172.17.0.1:8080
      FRONTEND_DOMAIN: 172.17.0.1:8080
      DATABASE_URI: 'postgres://root:toor@database/ESSAYB_DEV'
      BROKER_URI: 'amqp://guest:guest@broker:5672/'
      STRIPE_SECRET_KEY: "sk_test_51IrNBMAZfbuxebHePd59vJFQjsyo2bqZU7wI28R2Ai8NKqMrRLChd3HbMmCxvxqB96RCkOpo48UytOYkdZZ5j5zl00Bwa5HeCF"
      STRIPE_PRICE_ID: "price_1IrNDNAZfbuxebHeTNWS0YWP"
    volumes:
      - ./backend/api:/code/api
      - ./backend/logs:/code/logs
      - ./backend/setup.py:/code/setup.py
    depends_on:
      - broker
      - database

  gateway:
    image: essayb:gateway-dev
    container_name: essayb-gateway-dev
    restart: unless-stopped
    build:
      context: gateway
      dockerfile: Dockerfile.dev
    volumes:
      - ./gateway/default.dev.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:80
    depends_on:
      - backend
      - frontend
      - database
    logging:
      driver: none